<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on The imposter syndrome</title>
    <link>https://www.theimpostersyndrome.dev/categories/development/</link>
    <description>Recent content in Development on The imposter syndrome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.theimpostersyndrome.dev/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Developing user stories</title>
      <link>https://www.theimpostersyndrome.dev/posts/developing_user_stories/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.theimpostersyndrome.dev/posts/developing_user_stories/</guid>
      <description>Last week, in a little meeting we usually do to close our SCRUM Sprint period of two weeks, I was showing all the new features I had developed for our product. One of the features was not accepted and therefore its related user story was moved back from &amp;ldquo;QA Review&amp;rdquo; to &amp;ldquo;On development&amp;rdquo; again. I misunderstood my task.
What can we do here? Should we just tell the developer what was wrong and wait for him to change it ASAP or maybe should we try to guess what led him to do it that way the first time to see if we have a problem in our product development workflow?</description>
    </item>
    
    <item>
      <title>.NET Framework vs .NET Core</title>
      <link>https://www.theimpostersyndrome.dev/posts/core_vs_framework/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.theimpostersyndrome.dev/posts/core_vs_framework/</guid>
      <description>First things first, I know I’ve been out for a couple of months without posting any article on my site. Sorry for that! I’ve been busy finishing up my computer science degree and I wanted to boost my final project by giving it my free time as much as possible. Thanks to that I have written down some Xamarin things to investigate and share them here, also. Now let’s get back to work!</description>
    </item>
    
    <item>
      <title>.NET in a box</title>
      <link>https://www.theimpostersyndrome.dev/posts/dotnetinabox/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.theimpostersyndrome.dev/posts/dotnetinabox/</guid>
      <description>One of the most important things a .NET developer should know is what .NET is. It seems stupid but I know a lot of people that just starts coding and focusing in learning the .NET code they use. They can tell you why that .Count field is better than using the .Any () LINQ method to check for available values in your enumerator but they really don&amp;rsquo;t know (and some of them sadly don&amp;rsquo;t care) how their code is translated and optimized for a concrete processor in a concrete operating system.</description>
    </item>
    
    <item>
      <title>Git survival kit</title>
      <link>https://www.theimpostersyndrome.dev/posts/git_survival_kit/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.theimpostersyndrome.dev/posts/git_survival_kit/</guid>
      <description>When I first started in my current company I hadn&amp;rsquo;t used any version control system so when I started using Git it was a little tricky. Lucky me I had one of the best developers I&amp;rsquo;ve ever worked with, Víctor Guzmán. I remember he said something like: &amp;ldquo;Ok, you can use a GUI for a bad Git usage or you can use the Terminal for learning real Git usage. I use Terminal so I won&amp;rsquo;t help you with if you don&amp;rsquo;t use it&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>